version : "3.6"


services:

  web :
    build : .
    volumes :
      - ./backend/src:/backend/src/
    container_name: "fast-api"
    ports :
      - ${PORT}:${PORT}
    env_file : .env
    restart : on-failure

  postgresql:
      env_file : .env      
      image: postgres:15.1-alpine
      ports:
         - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      restart: on-failure
      volumes:
        - ./data/postgres:/var/lib


  # redis:
  #   image: redis:6.2.7
  #   container_name: "redis"
  #   ports:
  #     - 6379:6379
  #   env_file:
  #     - .env
  
  # flower : 
  #   image : python:3.10.8
  #   container_name: 'flower'
  #   restart: on-failure
  #   command : "sh -c app/src/containers/flower.sh"
  #   volumes:
  #     - ./:/app
  #   ports : 
  #   - ${FLOWER_PORT}:${FLOWER_PORT}
  #   expose :
  #   - ${FLOWER_PORT}
  #   depends_on :
  #   - redis
  #   - web
  #   - celery
  #   env_file:
  #     - .env

  # celery :
  #   image   : python:3.10.8
  #   container_name: 'celery'
  #   command: "sh -c app/src/containers/celery.sh"
  #   restart: on-failure    
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - web
  #     - redis
  #   env_file:
  #     - .env

